name: Build Rocky Linux bootc Image

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering

jobs:
  build-and-publish:
    name: Build and Publish bootc Image
    runs-on: ubuntu-latest
    container:
      image: rockylinux:9
      options: --privileged --security-opt seccomp=unconfined
    permissions:
      contents: read
      packages: write # Required to push to GitHub Container Registry

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          dnf update -y
          
          # Install dependencies - qemu-img provides disk image utilities needed by bootc
          dnf install -y podman rpm-ostree ostree bootc qemu-img

      - name: Configure Podman for container environment
        run: |
          # Create podman directories
          mkdir -p ~/.config/containers
          
          # Configure storage for rootless podman in container
          cat > ~/.config/containers/storage.conf << EOF
          [storage]
          driver = "vfs"
          EOF
          
          # Set up registries
          cat > ~/.config/containers/registries.conf << EOF
          [registries.search]
          registries = ['docker.io', 'quay.io', 'ghcr.io']
          EOF

      - name: Login to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | podman login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Initialize OSTree repository
        run: |
          mkdir -p repo cache
          # Initialize the OSTree repository
          ostree init --repo=./repo --mode=archive-z2

      - name: Configure Rocky Linux repositories
        run: |
          # Create repository configuration files that match the names in rocky-bootc-tree.json
          cat > /etc/yum.repos.d/rocky-baseos.repo << 'EOF'
          [rocky-baseos]
          name=Rocky Linux $releasever - BaseOS
          baseurl=https://dl.rockylinux.org/pub/rocky/$releasever/BaseOS/$basearch/os/
          enabled=1
          gpgcheck=1
          gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-rockylinux
          EOF
          
          cat > /etc/yum.repos.d/rocky-appstream.repo << 'EOF'
          [rocky-appstream]
          name=Rocky Linux $releasever - AppStream
          baseurl=https://dl.rockylinux.org/pub/rocky/$releasever/AppStream/$basearch/os/
          enabled=1
          gpgcheck=1
          gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-rockylinux
          EOF
          
          # Update repository metadata
          dnf makecache

      - name: Compose ostree commit
        run: |
          rpm-ostree compose tree \
            --repo=./repo \
            --cachedir=./cache \
            ./rocky-bootc-tree.json
        # Note: This step is tricky in a non-RHEL environment.
        # We are assuming the runner has access to the necessary tools and repos.
        # A more robust solution might use a containerized build environment.

      - name: Build and Push Container Image
        id: build-and-push
        run: |
          IMAGE_TAG=ghcr.io/${{ github.repository }}:${{ github.sha }}
          
          # Build the container image
          podman build -t $IMAGE_TAG -f ./Dockerfile .
          
          # Push the image
          podman push $IMAGE_TAG
          
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Create Bootable Disk Image
        run: |
          IMAGE_FILE="rocky-bootc-${{ github.sha }}.qcow2"
          
          # Pull the image we just pushed to ensure we have it locally for bootc
          podman pull ${{ env.IMAGE_TAG }}
          
          # Create the disk image
          bootc disk create \
            --image-size 10G \
            ${{ env.IMAGE_TAG }} \
            $IMAGE_FILE
            
          echo "IMAGE_FILE=$IMAGE_FILE" >> $GITHUB_ENV

      - name: Upload Disk Image as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: rocky-bootc-image
          path: ${{ env.IMAGE_FILE }}
          retention-days: 5
