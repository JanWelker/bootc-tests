name: Build Rocky Linux bootc Image

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering

jobs:
  build-and-publish:
    name: Build and Publish bootc Image
    runs-on: ubuntu-latest
    container:
      image: rockylinux:9
    permissions:
      contents: read
      packages: write # Required to push to GitHub Container Registry

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64

      - name: Install build dependencies
        run: |
          dnf update -y
          dnf install -y podman rpm-ostree bootc qemu-utils

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compose ostree commit
        run: |
          mkdir -p repo cache
          rpm-ostree compose tree \
            --repo=./repo \
            --cachedir=./cache \
            ./rocky-bootc-tree.json
        # Note: This step is tricky in a non-RHEL environment.
        # We are assuming the runner has access to the necessary tools and repos.
        # A more robust solution might use a containerized build environment.

      - name: Build and Push Container Image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }}
          platforms: linux/amd64

      - name: Create Bootable Disk Image
        run: |
          IMAGE_TAG=ghcr.io/${{ github.repository }}:${{ github.sha }}
          IMAGE_FILE="rocky-bootc-${{ github.sha }}.qcow2"
          
          # Pull the image we just pushed to ensure we have it locally for bootc
          podman pull $IMAGE_TAG
          
          # Create the disk image
          bootc disk create \
            --image-size 10G \
            $IMAGE_TAG \
            $IMAGE_FILE
            
          echo "IMAGE_FILE=$IMAGE_FILE" >> $GITHUB_ENV

      - name: Upload Disk Image as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: rocky-bootc-image
          path: ${{ env.IMAGE_FILE }}
          retention-days: 5
