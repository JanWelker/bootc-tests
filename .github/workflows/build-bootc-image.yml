name: Build bootc Image

on:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/build-bootc-image.yml'
      - 'container/Containerfile'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  REPO_PATH: janwelker/bootc-tests
  IMAGE_NAME: fedora-bootc
  FEDORA_VERSION: 42

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container image
        run: |
          podman build --build-arg FEDORA_VERSION=${{ env.FEDORA_VERSION }} -t ${{ env.REGISTRY }}/${{ env.REPO_PATH }}/${{ env.IMAGE_NAME }}:latest container/

      - name: Push container image to registry
        run: |
          podman push ${{ env.REGISTRY }}/${{ env.REPO_PATH }}/${{ env.IMAGE_NAME }}:latest

      - name: Pull bootc-image-builder
        run: |
          sudo podman pull quay.io/centos-bootc/bootc-image-builder:latest

      - name: Pull container image for bootc-image-builder
        run: |
          sudo podman pull ${{ env.REGISTRY }}/${{ env.REPO_PATH }}/${{ env.IMAGE_NAME }}:latest

      - name: Create output directory
        run: mkdir -p output

      - name: Build bootc disk image
        run: |
          sudo podman run --rm --privileged \
            --security-opt label=type:unconfined_t \
            -v /var/lib/containers/storage:/var/lib/containers/storage \
            -v $(pwd)/output:/output:Z \
            quay.io/centos-bootc/bootc-image-builder:latest \
            --type anaconda-iso \
            --use-librepo \
            --rootfs xfs \
            --output /output \
            ${{ env.REGISTRY }}/${{ env.REPO_PATH }}/${{ env.IMAGE_NAME }}:latest

      - name: List  output files
        run: |
          echo "Output directory contents:"
          ls -la output/bootiso/

      - name: Upload disk image artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.IMAGE_NAME }}-${{ env.FEDORA_VERSION }}_${{ github.run_number }}.iso
          path: output/bootiso/install.iso
          retention-days: 3
          if-no-files-found: error